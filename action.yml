name: Deploy App Service
description: Deploy an app service from a storage account in azure.

inputs:
  publish_directory:
    description: "The directory the project was published to."
    required: true
  account_name:
    description: "Storage account name - does not need to exist."
    required: true
  resource_group:
    description: "Resource group the storage and service app are in."
    required: true
  container_name:
    description: "Name for the storage container."
    required: true
  azure_credentials:
    description: "Azure service principal."
    required: true
  service_app_name:
    description: "Azure Service App name."
    required: true

runs:
  using: "composite"
  steps:
    - name: Zip the app contents
      uses: papeloto/action-zip@v1
      with:
        files: ./
        dest: publish.zip
    - name: Set SAS token expiration
      shell: bash
      run: echo "expiry=`date -u --date='+10 minutes' '+%Y-%m-%dT%H:%MZ'`" >> $GITHUB_ENV
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{inputs.azure_credentials}}
    - name: Deploy from storage
      uses: azure/CLI@v1
      with:
        azcliversion: 2.30.0
        inlineScript: |
          az extension add --name webapp

          az storage container create -n ${{inputs.container_name}} --account-name ${{inputs.account_name}}

          az storage blob upload -f publish.zip --account-name ${{inputs.account_name}} -c ${{inputs.container_name}} -n ${{inputs.account_name}}

          ZIP_URL=$(az storage blob generate-sas --full-uri --permissions r --expiry ${{env.expiry}} --account-name ${{inputs.account_name}} -c ${{inputs.container_name}} -n ${{inputs.account_name}} | xargs)
          az rest --method PUT \
          --uri https://management.azure.com/subscriptions/${SUBSCRIPTION}/resourceGroups/${RESOURCE_GROUP}/providers/Microsoft.Web/sites/${WEBAPP}/extensions/onedeploy?api-version=2020-12-01 \
          --body '{ 
            "properties": { 
              "properties": {
                "packageUri": "${ZIP_URL}"
               }, 
              "type": "zip",
            }
          }'
      az storage container delete -n ${{inputs.container_name}} --account-name ${{inputs.account_name}} 
